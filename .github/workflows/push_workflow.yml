name: PUSH Workflow

on:
  push:
    branches:
      - main

jobs:
  build-js-production:
    name: Build JavaScript/CSS for Production Server
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v1
      - name: NPM Build
        run: |
          npm install
          npm run prod
      - name: Put built assets in Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: assets
          path: public
          retention-days: 3
  deploy-production:
    name: Deploy Project to Production Server
    runs-on: ubuntu-latest
    needs: [ build-js-production ]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v1
      - name: Fetch built assets from Artifacts
        uses: actions/download-artifact@v1
        with:
          name: assets
          path: public
      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: '8.0'
          extension-csv: mbstring, bcmath
#      - name: Composer install
#        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --ignore-platform-reqs
      - name: Deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          username: ${{ secrets.SSH_USERNAME }}
          script: |
            cd ${{ secrets.DEV_REMOTE_LOCATION }}
            rm -rdf *
            rm -rdf .nojekyll
            rm -rdf .htaccess
      - name: Setup Deployer
        uses: wlixcc/SFTP-Deploy-Action@v1.2.1
        with:
          username: ${{ secrets.SSH_USERNAME }}
          server: ${{ secrets.SSH_HOST }}
          port: 22
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          remote_path: ${{ secrets.DEV_REMOTE_LOCATION }}
#      - name: Deploy to Production
#        env:
#          DOT_ENV: ${{ secrets.DOT_ENV_PRODUCTION }}
#        run: php vendor/bin/deployer.phar/bin/dep deploy prod --branch="main" -vv
      - name: Composer install
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --ignore-platform-reqs
      - name: set up
        run: |
          docker-compose up -d
